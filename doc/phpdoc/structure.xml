<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="Michelf\Markdown\Parser">
  <file path="tests/MichelfTest/Markdown/Parser/CoreTest.php" hash="7d7972b517cdc475be31007ee6711411" package="WebsafeTest\Filter\Markdown">
    <docblock line="2">
      <description>Websafe Filter Markdown TestSuite</description>
      <long-description></long-description>
      <tag line="2" name="link" description="http://github.com/websafe/websafe-filter-markdown" link="http://github.com/websafe/websafe-filter-markdown"/>
      <tag line="2" name="author" description="Thomas Szteliga &lt;ts@websafe.pl&gt;"/>
      <tag line="2" name="copyright" description="Copyright (c) 20012-2013 WEBSAFE.PL (https://websafe.pl)"/>
      <tag line="2" name="license" description="http://websafe.pl/license/bsd-3-clause BSD-3-Clause"/>
      <tag line="2" name="package" description="WebsafeTest_Filter_Markdown"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="MichelfTest\Markdown\Parser" line="24" package="WebsafeTest\Filter\Markdown">
      <extends>\MichelfTest\Markdown\Parser\AbstractParserTest</extends>
      <name>CoreParserTest</name>
      <full_name>\MichelfTest\Markdown\Parser\CoreParserTest</full_name>
      <docblock line="18">
        <description>PHPUnit test class for Michelf\Markdown\Parser\Core.</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Websafe"/>
        <tag line="18" name="package" description="WebsafeTest_Filter_Markdown"/>
      </docblock>
    </class>
    <source>eJyVUclqwzAUvOsr3rEJOMpya0ObpQk9NGBwSi6BICvPC7EtIz2TpqX/XslLUwgUqov1rJnRzGj6VCYl4/0+gz7sMDQiQlinGaGGjdCnozoXsEVDQZUSWpDDzbK0OEFCVN5zHqeUVOFAqpyfG3739aJax8tbnZoqKkqUhm2icmEg+CDM0ljAlMyspQ3K7LGGSlVedBonBMuf3Z3swXg4HI298XA0gd1qEczXq4H/CnfOj7GGrjK91qzEwmDn93rM2xMemqM38WQmKgtbBM92WNZDzS+FPIkYu3ZcGYemocPmdzKbFo2qtHQ03nbKWSFyNFYDYZPKBLPICew75t4X2qB+YMzd/QdiPw8NaSGpGR3EktqH81/8tyIlIPsXbA5jILIlt3I3UkulcdC9pRSEsdKXLt8/MnPW3OX0rrYA3wmLo4Fbx+yTgV2csy/2Dc3f1Nk=</source>
  </file>
  <file path="tests/MichelfTest/Markdown/Parser/AbstractParserTest.php" hash="c160f1d2a9ae2aee1ce016ebc85beb61" package="WebsafeTest\Filter\Markdown">
    <docblock line="2">
      <description>Michelf Markdown Filter Markdown TestSuite</description>
      <long-description></long-description>
      <tag line="2" name="link" description="http://github.com/websafe/websafe-filter-markdown" link="http://github.com/websafe/websafe-filter-markdown"/>
      <tag line="2" name="author" description="Thomas Szteliga &lt;ts@websafe.pl&gt;"/>
      <tag line="2" name="copyright" description="Copyright (c) 20012-2013 WEBSAFE.PL, https://websafe.pl/"/>
      <tag line="2" name="license" description="http://websafe.pl/license/bsd-3-clause BSD-3-Clause"/>
      <tag line="2" name="package" description="WebsafeTest_Filter_Markdown"/>
    </docblock>
    <class final="false" abstract="true" namespace="MichelfTest\Markdown\Parser" line="24" package="WebsafeTest\Filter\Markdown">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>AbstractParserTest</name>
      <full_name>\MichelfTest\Markdown\Parser\AbstractParserTest</full_name>
      <docblock line="18">
        <description>Abstract test class for all markdown filter variations.</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Websafe"/>
        <tag line="18" name="package" description="WebsafeTest_Filter_Markdown"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="MichelfTest\Markdown\Parser" line="32" package="WebsafeTest\Filter\Markdown">
        <name>getFilterInstance</name>
        <full_name>getFilterInstance</full_name>
        <docblock line="27">
          <description>Retrieve a filter instance.</description>
          <long-description></long-description>
          <tag line="27" name="return" description="" type="\MichelfTest\Markdown\Parser\unknown">
            <type by_reference="false">\MichelfTest\Markdown\Parser\unknown</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="MichelfTest\Markdown\Parser" line="43" package="WebsafeTest\Filter\Markdown">
        <name>testClassCanInstantiate</name>
        <full_name>testClassCanInstantiate</full_name>
        <docblock line="40">
          <description>Describe this test.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="MichelfTest\Markdown\Parser" line="54" package="WebsafeTest\Filter\Markdown">
        <name>testCoreFeatures</name>
        <full_name>testCoreFeatures</full_name>
        <docblock line="51">
          <description>Test some Core features.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="MichelfTest\Markdown\Parser" line="74" package="WebsafeTest\Filter\Markdown">
        <name>testDatasets</name>
        <full_name>testDatasets</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="74" code="50010">No DocBlock was found for method testDatasets()</error>
    </parse_markers>
    <source>eJzVV1FP4zgQfr78Ci9CJEFtA+wblAJLi6juYBHltCddTlk3nTQRqZOzXdjeiv9+YydOmzYUdl9OZwka1zPffPPNOHa7Z3mcW97+vkX2yU0SxpBG5Ibyx0n2zMhVkkrgy/kDCDmaJxLQWjmcpwl7JLGU+bHnTRMZz8edMJt5zzAWNALz2Y40TntW4mhXOpdxxslDnM2oIKN/JKTJlJKuFOelWydPe9o0zPIFT6axJJfVkxO65Ojg4PCofXRw+JF8GXwaXVwNOne/tTQfgYSWMF5JNgQmwPBdWS5XvLGYtD+2w5TO0ezTqI+TSz3R/jkNH+kUyJfCUYkRFAoFN8vMvFJNz2J0BgKdwAirPHxj6t9RLoCfWJYKdnd99ztLEI+j03PGHwNlfEkFnOj1fsIhlBlfDDEcxQf0K6t2MRaS01ASiR4EyQtBIlSWpikxipOiAuSJ8oTKJGOiY0oYUglTBDZp/VCq1MQuwhoqRWrKi8A3CWwitiRofbcsgkOno8Y+uQfJE3gCQg3xhAlJWQid0sRYnnOQc87InD0yTUp/7enPfD7GwpJozkKVMpmCLHIYlmDEcbXh98INx24R7lJnc0owm4BDnmINHVvxtVvExj9ECnTGzq6ME+G6J1YFURJi8FxDc9BGLb+YZMk5FmlGJRocZ1FkSK+o0AcR8mQMRMXQ1e1szU9Z6FiXlBUpSix2U5YZ5qaZt3sbohii2rCwQUjg8oJzurim4ldYOJWFGjbWnAmVjd2qLVDlEURpkjuVYsEMcN9PULnMdSvrSpw1CXQLiWwGuPM5kAgoigviHTqg+VVp/T8SYCPm4O85TYWz47OdFtJu96pQjm27b3l1854So+vlvSYAtfYOkPiwRMGHBpgdteizUz123oKr6bOO7TNk/CmlMRmrf90wm0CPjsOup586JpEayBY2CnEJ9xWRvnZ23i36GtWcQ69gtJfKE3Vu+gzCOCP2Iltk9onPzvamEj9KtkgWPd6i+0u3QPJlHcuXZ71NqmaD1F4ebNtG6FOJ71jZtAkmZum0aNRa40/WDxy0Uu80f+MkcoKgP7wPAtIhtqdCKlx7BQupAg1j4jSA4tG/i/eJmbtCTI0kQnO10O4lAkM67rqFsfpAlnaZbLarpfvnX2rzFz7F5odbPJNWszfjxWqeLZ88LHLCZMCdCr/WVSjHaxKvyGIKodQoJ+tp/EhBNvJoqpBn47SKVs/9Zyq2UTUlrOOSvT3i2PeDi/7NoDOb2OTDuvhMi/9q3TwviRxbeZ6ueg7UvUJglzsrb9F1LqVb47oeTk5x47Moc5o4tYh/d/FwPby9+hwM/ngY3I6Gn2/dV+I1s1ej6gLdeWPUW8M3R7SVSA2tqMbLTzQoFRmXTkVhozlNZwZPNJ2DaLRcaXK9unrd2dLFo80uXloXwZWpeUsNJ00tsFtdYU/VXRACfZBmDKsvxWanq7G925GVXtFfLGOTzutd8lpNduFbjrsDJtdylv6n/GIk0Mgw1zfxd952Kq+Gw7CWa6uRSxls9Xirquc2u+hLtcr6mLwlQAPPOf5mk8sYrXpBWobQmuf6LnmxXqx/AaJTMO8=</source>
  </file>
  <file path="tests/MichelfTest/Markdown/Parser/ExtraTest.php" hash="c04e00daa29d369a6eb1876aabcf34ab" package="WebsafeTest\Filter\Markdown">
    <docblock line="2">
      <description>Websafe Filter Markdown TestSuite</description>
      <long-description></long-description>
      <tag line="2" name="link" description="http://github.com/websafe/websafe-filter-markdown" link="http://github.com/websafe/websafe-filter-markdown"/>
      <tag line="2" name="author" description="Thomas Szteliga &lt;ts@websafe.pl&gt;"/>
      <tag line="2" name="copyright" description="Copyright (c) 20012-2013 WEBSAFE.PL (https://websafe.pl)"/>
      <tag line="2" name="license" description="http://websafe.pl/license/bsd-3-clause BSD-3-Clause"/>
      <tag line="2" name="package" description="WebsafeTest_Filter_Markdown"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="MichelfTest\Markdown\Parser" line="24" package="WebsafeTest\Filter\Markdown">
      <extends>\MichelfTest\Markdown\Parser\AbstractParserTest</extends>
      <name>ExtraParserTest</name>
      <full_name>\MichelfTest\Markdown\Parser\ExtraParserTest</full_name>
      <docblock line="18">
        <description>PHPUnit test class for \Websafe\Filter\Markdown\Extra</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Websafe"/>
        <tag line="18" name="package" description="WebsafeTest_Filter_Markdown"/>
      </docblock>
    </class>
    <source>eJyVUclqwzAUvOsr3rEJOMpya0ObpQk9NGBwSi6GICvPtog3pGeStPTfK291oVCoLtazZkYzo/lTEReMD4cMhnDAwIgQYasSQg07oc+n/JLBHg15pSK0oAq3SFR2hpiouOc8UhSXwUjmKb80/O7rhLWOk7Y6NVWUFOca9nGeCgPeO2GiIgFzMouWNiqSxxoq8+KmVRQTrL93d3IA0/F4MnWm48kMDpuVt9xuRu4r3FV+jDXUywxasxIzg53f/pi3JzwwJ2fmyESUFrbynu2wroeaXwh5FhF27VRlHJuGjrufyWxaNHmpZUXjbaecZSJFYzUQdkrGmISVgN8xfVdog/qBseruPxD+MjCkhaRmrCCW1D6c++K+ZYqA7F+wOYyB0Jbst5b9xm4vublaqe4xpSCMcn3rAv4jNGfNZbVebwzwSpidDPz2zD4Y2MU5+2RfqPXV+w==</source>
  </file>
  <file path="library/Michelf/Markdown/Parser/CoreParser.php" hash="14b234242f8608ebf89c91955465b497" package="Michelf\Markdown\Parser">
    <docblock line="2">
      <description>This file was generated by a build-script.</description>
      <long-description>&lt;p&gt;Do not edit.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Michelf_Markdown_Parser"/>
      <tag line="2" name="author" description="Michel Fortin, &lt;http://michelf.com/&gt;"/>
      <tag line="2" name="copyright" description="2004-2013 Michel Fortin, &lt;http://michelf.com/&gt;"/>
      <tag line="2" name="link" description="http://michelf.com/projects/php-markdown/" link="http://michelf.com/projects/php-markdown/"/>
    </docblock>
    <class final="false" abstract="false" namespace="Michelf\Markdown\Parser" line="38" package="Michelf\Markdown\Parser">
      <extends/>
      <name>CoreParser</name>
      <full_name>\Michelf\Markdown\Parser\CoreParser</full_name>
      <docblock line="12">
        <description>This class was extracted from the `markdown.php` file by a build-script,
DO NOT EDIT HERE!</description>
        <long-description>&lt;p&gt;What was modified?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A namespace was added.&lt;/li&gt;
&lt;li&gt;Classes was renamed.&lt;/li&gt;
&lt;li&gt;The class constructor was renamed.&lt;/li&gt;
&lt;li&gt;Some unused constant were removed&lt;/li&gt;
&lt;li&gt;Classes were split into separate files&lt;/li&gt;
&lt;li&gt;Code was formatted using php-cs-fixer&lt;/li&gt;
&lt;li&gt;Documentation was generated using phpdocumentor2&lt;/li&gt;
&lt;li&gt;..&lt;/li&gt;
&lt;/ul&gt;</long-description>
        <tag line="12" name="package" description="Michelf_Markdown_Parser"/>
        <tag line="12" name="author" description="Michel Fortin, &lt;http://michelf.com/&gt;"/>
        <tag line="12" name="copyright" description="2004-2013 Michel Fortin, &lt;http://michelf.com/&gt;"/>
        <tag line="12" name="link" description="http://michelf.com/projects/php-markdown/" link="http://michelf.com/projects/php-markdown/"/>
        <tag line="12" name="todo" description="Add DocBlock for class properties."/>
        <tag line="12" name="todo" description="Add DocBlock for class methods."/>
        <tag line="12" name="fixme" description="Get rid of constants, use class options/config and defaults."/>
        <tag line="12" name="fixme" description="Stop passing $this as reference"/>
        <tag line="12" name="link" description="otherwise&#10;&#9;PHP 5.4 wil raise a fatal error." link="http://php.net/manual/en/language.references.pass.php}"/>
      </docblock>
      <constant namespace="Michelf\Markdown\Parser" line="40" package="Michelf\Markdown\Parser">
        <name>EMPTY_ELEMENT_SUFFIX</name>
        <full_name>EMPTY_ELEMENT_SUFFIX</full_name>
        <value>" /&gt;"</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="41" package="Michelf\Markdown\Parser">
        <name>TAB_WIDTH</name>
        <full_name>TAB_WIDTH</full_name>
        <value>4</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="42" package="Michelf\Markdown\Parser">
        <name>FN_LINK_TITLE</name>
        <full_name>FN_LINK_TITLE</full_name>
        <value>""</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="43" package="Michelf\Markdown\Parser">
        <name>FN_BACKLINK_TITLE</name>
        <full_name>FN_BACKLINK_TITLE</full_name>
        <value>""</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="44" package="Michelf\Markdown\Parser">
        <name>FN_LINK_CLASS</name>
        <full_name>FN_LINK_CLASS</full_name>
        <value>""</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="45" package="Michelf\Markdown\Parser">
        <name>FN_BACKLINK_CLASS</name>
        <full_name>FN_BACKLINK_CLASS</full_name>
        <value>""</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="46" package="Michelf\Markdown\Parser">
        <name>CODE_CLASS_PREFIX</name>
        <full_name>CODE_CLASS_PREFIX</full_name>
        <value>""</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="47" package="Michelf\Markdown\Parser">
        <name>CODE_ATTR_ON_PRE</name>
        <full_name>CODE_ATTR_ON_PRE</full_name>
        <value>false</value>
      </constant>
      <property final="false" static="false" visibility="public" line="52" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$empty_element_suffix</name>
        <default>self::EMPTY_ELEMENT_SUFFIX</default>
      </property>
      <property final="false" static="false" visibility="public" line="53" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$tab_width</name>
        <default>self::TAB_WIDTH</default>
      </property>
      <property final="false" static="false" visibility="public" line="56" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$no_markup</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="public" line="57" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$no_entities</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="public" line="60" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$predef_urls</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="61" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$predef_titles</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="67" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$nested_brackets_depth</name>
        <default>6</default>
      </property>
      <property final="false" static="false" visibility="public" line="68" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$nested_brackets_re</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="70" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$nested_url_parenthesis_depth</name>
        <default>4</default>
      </property>
      <property final="false" static="false" visibility="public" line="71" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$nested_url_parenthesis_re</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="74" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$escape_chars</name>
        <default>'\`*_{}[]()&gt;#+-.!'</default>
      </property>
      <property final="false" static="false" visibility="public" line="75" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$escape_chars_re</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="102" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$urls</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="103" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$titles</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="104" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$html_hashes</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="107" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$in_anchor</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="public" line="174" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$document_gamut</name>
        <default>array("stripLinkDefinitions" =&gt; 20, "runBasicBlockGamut" =&gt; 30)</default>
      </property>
      <property final="false" static="false" visibility="public" line="408" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$block_gamut</name>
        <default>array("doHeaders" =&gt; 10, "doHorizontalRules" =&gt; 20, "doLists" =&gt; 40, "doCodeBlocks" =&gt; 50, "doBlockQuotes" =&gt; 60)</default>
      </property>
      <property final="false" static="false" visibility="public" line="471" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$span_gamut</name>
        <default>array("parseSpan" =&gt; -30, "doImages" =&gt; 10, "doAnchors" =&gt; 20, "doAutoLinks" =&gt; 30, "encodeAmpsAndAngles" =&gt; 40, "doItalicsAndBold" =&gt; 50, "doHardBreaks" =&gt; 60)</default>
      </property>
      <property final="false" static="false" visibility="public" line="888" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$list_level</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="public" line="1006" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$em_relist</name>
        <default>array('' =&gt; '(?:(?&lt;!\*)\*(?!\*)|(?&lt;!_)_(?!_))(?=\S|$)(?![\.,:;]\s)', '*' =&gt; '(?&lt;=\S|^)(?&lt;!\*)\*(?!\*)', '_' =&gt; '(?&lt;=\S|^)(?&lt;!_)_(?!_)')</default>
      </property>
      <property final="false" static="false" visibility="public" line="1011" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$strong_relist</name>
        <default>array('' =&gt; '(?:(?&lt;!\*)\*\*(?!\*)|(?&lt;!_)__(?!_))(?=\S|$)(?![\.,:;]\s)', '**' =&gt; '(?&lt;=\S|^)(?&lt;!\*)\*\*(?!\*)', '__' =&gt; '(?&lt;=\S|^)(?&lt;!_)__(?!_)')</default>
      </property>
      <property final="false" static="false" visibility="public" line="1016" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$em_strong_relist</name>
        <default>array('' =&gt; '(?:(?&lt;!\*)\*\*\*(?!\*)|(?&lt;!_)___(?!_))(?=\S|$)(?![\.,:;]\s)', '***' =&gt; '(?&lt;=\S|^)(?&lt;!\*)\*\*\*(?!\*)', '___' =&gt; '(?&lt;=\S|^)(?&lt;!_)___(?!_)')</default>
      </property>
      <property final="false" static="false" visibility="public" line="1021" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$em_strong_prepared_relist</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="1491" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$utf8_strlen</name>
        <default>'mb_strlen'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="77" package="Michelf\Markdown\Parser">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="109" package="Michelf\Markdown\Parser">
        <name>setup</name>
        <full_name>setup</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="123" package="Michelf\Markdown\Parser">
        <name>teardown</name>
        <full_name>teardown</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="134" package="Michelf\Markdown\Parser">
        <name>transform</name>
        <full_name>transform</full_name>
        <argument line="134">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="181" package="Michelf\Markdown\Parser">
        <name>stripLinkDefinitions</name>
        <full_name>stripLinkDefinitions</full_name>
        <argument line="181">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="217" package="Michelf\Markdown\Parser">
        <name>_stripLinkDefinitions_callback</name>
        <full_name>_stripLinkDefinitions_callback</full_name>
        <argument line="217">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="227" package="Michelf\Markdown\Parser">
        <name>hashHTMLBlocks</name>
        <full_name>hashHTMLBlocks</full_name>
        <argument line="227">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="367" package="Michelf\Markdown\Parser">
        <name>_hashHTMLBlocks_callback</name>
        <full_name>_hashHTMLBlocks_callback</full_name>
        <argument line="367">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="375" package="Michelf\Markdown\Parser">
        <name>hashPart</name>
        <full_name>hashPart</full_name>
        <argument line="375">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
        <argument line="375">
          <name>$boundary</name>
          <default>'X'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="399" package="Michelf\Markdown\Parser">
        <name>hashBlock</name>
        <full_name>hashBlock</full_name>
        <argument line="399">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="421" package="Michelf\Markdown\Parser">
        <name>runBlockGamut</name>
        <full_name>runBlockGamut</full_name>
        <argument line="421">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="436" package="Michelf\Markdown\Parser">
        <name>runBasicBlockGamut</name>
        <full_name>runBasicBlockGamut</full_name>
        <argument line="436">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="453" package="Michelf\Markdown\Parser">
        <name>doHorizontalRules</name>
        <full_name>doHorizontalRules</full_name>
        <argument line="453">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="495" package="Michelf\Markdown\Parser">
        <name>runSpanGamut</name>
        <full_name>runSpanGamut</full_name>
        <argument line="495">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="507" package="Michelf\Markdown\Parser">
        <name>doHardBreaks</name>
        <full_name>doHardBreaks</full_name>
        <argument line="507">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="513" package="Michelf\Markdown\Parser">
        <name>_doHardBreaks_callback</name>
        <full_name>_doHardBreaks_callback</full_name>
        <argument line="513">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="518" package="Michelf\Markdown\Parser">
        <name>doAnchors</name>
        <full_name>doAnchors</full_name>
        <argument line="518">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="590" package="Michelf\Markdown\Parser">
        <name>_doAnchors_reference_callback</name>
        <full_name>_doAnchors_reference_callback</full_name>
        <argument line="590">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="625" package="Michelf\Markdown\Parser">
        <name>_doAnchors_inline_callback</name>
        <full_name>_doAnchors_inline_callback</full_name>
        <argument line="625">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="646" package="Michelf\Markdown\Parser">
        <name>doImages</name>
        <full_name>doImages</full_name>
        <argument line="646">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="702" package="Michelf\Markdown\Parser">
        <name>_doImages_reference_callback</name>
        <full_name>_doImages_reference_callback</full_name>
        <argument line="702">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="730" package="Michelf\Markdown\Parser">
        <name>_doImages_inline_callback</name>
        <full_name>_doImages_inline_callback</full_name>
        <argument line="730">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="750" package="Michelf\Markdown\Parser">
        <name>doHeaders</name>
        <full_name>doHeaders</full_name>
        <argument line="750">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="781" package="Michelf\Markdown\Parser">
        <name>_doHeaders_callback_setext</name>
        <full_name>_doHeaders_callback_setext</full_name>
        <argument line="781">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="793" package="Michelf\Markdown\Parser">
        <name>_doHeaders_callback_atx</name>
        <full_name>_doHeaders_callback_atx</full_name>
        <argument line="793">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="802" package="Michelf\Markdown\Parser">
        <name>doLists</name>
        <full_name>doLists</full_name>
        <argument line="802">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="868" package="Michelf\Markdown\Parser">
        <name>_doLists_callback</name>
        <full_name>_doLists_callback</full_name>
        <argument line="868">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="890" package="Michelf\Markdown\Parser">
        <name>processListItems</name>
        <full_name>processListItems</full_name>
        <argument line="890">
          <name>$list_str</name>
          <default></default>
          <type/>
        </argument>
        <argument line="890">
          <name>$marker_any_re</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="938" package="Michelf\Markdown\Parser">
        <name>_processListItems_callback</name>
        <full_name>_processListItems_callback</full_name>
        <argument line="938">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="962" package="Michelf\Markdown\Parser">
        <name>doCodeBlocks</name>
        <full_name>doCodeBlocks</full_name>
        <argument line="962">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="981" package="Michelf\Markdown\Parser">
        <name>_doCodeBlocks_callback</name>
        <full_name>_doCodeBlocks_callback</full_name>
        <argument line="981">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="996" package="Michelf\Markdown\Parser">
        <name>makeCodeSpan</name>
        <full_name>makeCodeSpan</full_name>
        <argument line="996">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1023" package="Michelf\Markdown\Parser">
        <name>prepareItalicsAndBold</name>
        <full_name>prepareItalicsAndBold</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1046" package="Michelf\Markdown\Parser">
        <name>doItalicsAndBold</name>
        <full_name>doItalicsAndBold</full_name>
        <argument line="1046">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1170" package="Michelf\Markdown\Parser">
        <name>doBlockQuotes</name>
        <full_name>doBlockQuotes</full_name>
        <argument line="1170">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1186" package="Michelf\Markdown\Parser">
        <name>_doBlockQuotes_callback</name>
        <full_name>_doBlockQuotes_callback</full_name>
        <argument line="1186">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1201" package="Michelf\Markdown\Parser">
        <name>_doBlockQuotes_callback2</name>
        <full_name>_doBlockQuotes_callback2</full_name>
        <argument line="1201">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1209" package="Michelf\Markdown\Parser">
        <name>formParagraphs</name>
        <full_name>formParagraphs</full_name>
        <argument line="1209">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1278" package="Michelf\Markdown\Parser">
        <name>encodeAttribute</name>
        <full_name>encodeAttribute</full_name>
        <argument line="1278">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1290" package="Michelf\Markdown\Parser">
        <name>encodeAmpsAndAngles</name>
        <full_name>encodeAmpsAndAngles</full_name>
        <argument line="1290">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1311" package="Michelf\Markdown\Parser">
        <name>doAutoLinks</name>
        <full_name>doAutoLinks</full_name>
        <argument line="1311">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1339" package="Michelf\Markdown\Parser">
        <name>_doAutoLinks_url_callback</name>
        <full_name>_doAutoLinks_url_callback</full_name>
        <argument line="1339">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1346" package="Michelf\Markdown\Parser">
        <name>_doAutoLinks_email_callback</name>
        <full_name>_doAutoLinks_email_callback</full_name>
        <argument line="1346">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1354" package="Michelf\Markdown\Parser">
        <name>encodeEmailAddress</name>
        <full_name>encodeEmailAddress</full_name>
        <argument line="1354">
          <name>$addr</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1395" package="Michelf\Markdown\Parser">
        <name>parseSpan</name>
        <full_name>parseSpan</full_name>
        <argument line="1395">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1454" package="Michelf\Markdown\Parser">
        <name>handleSpanToken</name>
        <full_name>handleSpanToken</full_name>
        <argument line="1454">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1454">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1480" package="Michelf\Markdown\Parser">
        <name>outdent</name>
        <full_name>outdent</full_name>
        <argument line="1480">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1493" package="Michelf\Markdown\Parser">
        <name>detab</name>
        <full_name>detab</full_name>
        <argument line="1493">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1507" package="Michelf\Markdown\Parser">
        <name>_detab_callback</name>
        <full_name>_detab_callback</full_name>
        <argument line="1507">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1526" package="Michelf\Markdown\Parser">
        <name>_initDetab</name>
        <full_name>_initDetab</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1540" package="Michelf\Markdown\Parser">
        <name>unhash</name>
        <full_name>unhash</full_name>
        <argument line="1540">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1549" package="Michelf\Markdown\Parser">
        <name>_unhash_callback</name>
        <full_name>_unhash_callback</full_name>
        <argument line="1549">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="52" code="50018">No DocBlock was found for property $empty_element_suffix</error>
      <error line="53" code="50018">No DocBlock was found for property $tab_width</error>
      <error line="56" code="50018">No DocBlock was found for property $no_markup</error>
      <error line="57" code="50018">No DocBlock was found for property $no_entities</error>
      <error line="60" code="50018">No DocBlock was found for property $predef_urls</error>
      <error line="61" code="50018">No DocBlock was found for property $predef_titles</error>
      <error line="67" code="50018">No DocBlock was found for property $nested_brackets_depth</error>
      <error line="68" code="50018">No DocBlock was found for property $nested_brackets_re</error>
      <error line="70" code="50018">No DocBlock was found for property $nested_url_parenthesis_depth</error>
      <error line="71" code="50018">No DocBlock was found for property $nested_url_parenthesis_re</error>
      <error line="74" code="50018">No DocBlock was found for property $escape_chars</error>
      <error line="75" code="50018">No DocBlock was found for property $escape_chars_re</error>
      <error line="102" code="50018">No DocBlock was found for property $urls</error>
      <error line="103" code="50018">No DocBlock was found for property $titles</error>
      <error line="104" code="50018">No DocBlock was found for property $html_hashes</error>
      <error line="107" code="50018">No DocBlock was found for property $in_anchor</error>
      <error line="174" code="50018">No DocBlock was found for property $document_gamut</error>
      <error line="408" code="50018">No DocBlock was found for property $block_gamut</error>
      <error line="471" code="50018">No DocBlock was found for property $span_gamut</error>
      <error line="888" code="50018">No DocBlock was found for property $list_level</error>
      <error line="1006" code="50018">No DocBlock was found for property $em_relist</error>
      <error line="1011" code="50018">No DocBlock was found for property $strong_relist</error>
      <error line="1016" code="50018">No DocBlock was found for property $em_strong_relist</error>
      <error line="1021" code="50018">No DocBlock was found for property $em_strong_prepared_relist</error>
      <error line="1491" code="50018">No DocBlock was found for property $utf8_strlen</error>
      <error line="77" code="50010">No DocBlock was found for method __construct()</error>
      <error line="109" code="50010">No DocBlock was found for method setup()</error>
      <error line="123" code="50010">No DocBlock was found for method teardown()</error>
      <error line="134" code="50010">No DocBlock was found for method transform()</error>
      <error line="181" code="50010">No DocBlock was found for method stripLinkDefinitions()</error>
      <error line="217" code="50010">No DocBlock was found for method _stripLinkDefinitions_callback()</error>
      <error line="227" code="50010">No DocBlock was found for method hashHTMLBlocks()</error>
      <error line="367" code="50010">No DocBlock was found for method _hashHTMLBlocks_callback()</error>
      <error line="375" code="50010">No DocBlock was found for method hashPart()</error>
      <error line="399" code="50010">No DocBlock was found for method hashBlock()</error>
      <error line="421" code="50010">No DocBlock was found for method runBlockGamut()</error>
      <error line="436" code="50010">No DocBlock was found for method runBasicBlockGamut()</error>
      <error line="453" code="50010">No DocBlock was found for method doHorizontalRules()</error>
      <error line="495" code="50010">No DocBlock was found for method runSpanGamut()</error>
      <error line="507" code="50010">No DocBlock was found for method doHardBreaks()</error>
      <error line="513" code="50010">No DocBlock was found for method _doHardBreaks_callback()</error>
      <error line="518" code="50010">No DocBlock was found for method doAnchors()</error>
      <error line="590" code="50010">No DocBlock was found for method _doAnchors_reference_callback()</error>
      <error line="625" code="50010">No DocBlock was found for method _doAnchors_inline_callback()</error>
      <error line="646" code="50010">No DocBlock was found for method doImages()</error>
      <error line="702" code="50010">No DocBlock was found for method _doImages_reference_callback()</error>
      <error line="730" code="50010">No DocBlock was found for method _doImages_inline_callback()</error>
      <error line="750" code="50010">No DocBlock was found for method doHeaders()</error>
      <error line="781" code="50010">No DocBlock was found for method _doHeaders_callback_setext()</error>
      <error line="793" code="50010">No DocBlock was found for method _doHeaders_callback_atx()</error>
      <error line="802" code="50010">No DocBlock was found for method doLists()</error>
      <error line="868" code="50010">No DocBlock was found for method _doLists_callback()</error>
      <error line="890" code="50010">No DocBlock was found for method processListItems()</error>
      <error line="938" code="50010">No DocBlock was found for method _processListItems_callback()</error>
      <error line="962" code="50010">No DocBlock was found for method doCodeBlocks()</error>
      <error line="981" code="50010">No DocBlock was found for method _doCodeBlocks_callback()</error>
      <error line="996" code="50010">No DocBlock was found for method makeCodeSpan()</error>
      <error line="1023" code="50010">No DocBlock was found for method prepareItalicsAndBold()</error>
      <error line="1046" code="50010">No DocBlock was found for method doItalicsAndBold()</error>
      <error line="1170" code="50010">No DocBlock was found for method doBlockQuotes()</error>
      <error line="1186" code="50010">No DocBlock was found for method _doBlockQuotes_callback()</error>
      <error line="1201" code="50010">No DocBlock was found for method _doBlockQuotes_callback2()</error>
      <error line="1209" code="50010">No DocBlock was found for method formParagraphs()</error>
      <error line="1278" code="50010">No DocBlock was found for method encodeAttribute()</error>
      <error line="1290" code="50010">No DocBlock was found for method encodeAmpsAndAngles()</error>
      <error line="1311" code="50010">No DocBlock was found for method doAutoLinks()</error>
      <error line="1339" code="50010">No DocBlock was found for method _doAutoLinks_url_callback()</error>
      <error line="1346" code="50010">No DocBlock was found for method _doAutoLinks_email_callback()</error>
      <error line="1354" code="50010">No DocBlock was found for method encodeEmailAddress()</error>
      <error line="1395" code="50010">No DocBlock was found for method parseSpan()</error>
      <error line="1454" code="50010">No DocBlock was found for method handleSpanToken()</error>
      <error line="1480" code="50010">No DocBlock was found for method outdent()</error>
      <error line="1493" code="50010">No DocBlock was found for method detab()</error>
      <error line="1507" code="50010">No DocBlock was found for method _detab_callback()</error>
      <error line="1526" code="50010">No DocBlock was found for method _initDetab()</error>
      <error line="1540" code="50010">No DocBlock was found for method unhash()</error>
      <error line="1549" code="50010">No DocBlock was found for method _unhash_callback()</error>
    </parse_markers>
    <source></source>
  </file>
  <file path="library/Michelf/Markdown/Parser/ExtraParser.php" hash="adecf2682fff4cade25b3b488b2165bd" package="Michelf\Markdown\Parser">
    <docblock line="2">
      <description>This file was generated by a build-script.</description>
      <long-description>&lt;p&gt;Do not edit.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Michelf_Markdown_Parser"/>
      <tag line="2" name="author" description="Michel Fortin, &lt;http://michelf.com/&gt;"/>
      <tag line="2" name="copyright" description="2004-2013 Michel Fortin, &lt;http://michelf.com/&gt;"/>
      <tag line="2" name="link" description="http://michelf.com/projects/php-markdown/" link="http://michelf.com/projects/php-markdown/"/>
    </docblock>
    <class final="false" abstract="false" namespace="Michelf\Markdown\Parser" line="40" package="Michelf\Markdown\Parser">
      <extends>\Michelf\Markdown\Parser\CoreParser</extends>
      <name>ExtraParser</name>
      <full_name>\Michelf\Markdown\Parser\ExtraParser</full_name>
      <docblock line="14">
        <description>This class was extracted from the `markdown.php` file by a build-script,
DO NOT EDIT HERE!</description>
        <long-description>&lt;p&gt;What was modified?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A namespace was added.&lt;/li&gt;
&lt;li&gt;Classes was renamed.&lt;/li&gt;
&lt;li&gt;The class constructor was renamed.&lt;/li&gt;
&lt;li&gt;Some unused constant were removed&lt;/li&gt;
&lt;li&gt;Classes were split into separate files&lt;/li&gt;
&lt;li&gt;Code was formatted using php-cs-fixer&lt;/li&gt;
&lt;li&gt;Documentation was generated using phpdocumentor2&lt;/li&gt;
&lt;li&gt;..&lt;/li&gt;
&lt;/ul&gt;</long-description>
        <tag line="14" name="package" description="Michelf_Markdown_Parser"/>
        <tag line="14" name="author" description="Michel Fortin, &lt;http://michelf.com/&gt;"/>
        <tag line="14" name="copyright" description="2004-2013 Michel Fortin, &lt;http://michelf.com/&gt;"/>
        <tag line="14" name="link" description="http://michelf.com/projects/php-markdown/" link="http://michelf.com/projects/php-markdown/"/>
        <tag line="14" name="todo" description="Add DocBlock for class properties."/>
        <tag line="14" name="todo" description="Add DocBlock for class methods."/>
        <tag line="14" name="fixme" description="Get rid of constants, use class options/config and defaults."/>
        <tag line="14" name="fixme" description="Stop passing $this as reference"/>
        <tag line="14" name="link" description="otherwise&#10;&#9;PHP 5.4 wil raise a fatal error." link="http://php.net/manual/en/language.references.pass.php}"/>
      </docblock>
      <constant namespace="Michelf\Markdown\Parser" line="42" package="Michelf\Markdown\Parser">
        <name>EMPTY_ELEMENT_SUFFIX</name>
        <full_name>EMPTY_ELEMENT_SUFFIX</full_name>
        <value>" /&gt;"</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="43" package="Michelf\Markdown\Parser">
        <name>TAB_WIDTH</name>
        <full_name>TAB_WIDTH</full_name>
        <value>4</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="44" package="Michelf\Markdown\Parser">
        <name>FN_LINK_TITLE</name>
        <full_name>FN_LINK_TITLE</full_name>
        <value>""</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="45" package="Michelf\Markdown\Parser">
        <name>FN_BACKLINK_TITLE</name>
        <full_name>FN_BACKLINK_TITLE</full_name>
        <value>""</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="46" package="Michelf\Markdown\Parser">
        <name>FN_LINK_CLASS</name>
        <full_name>FN_LINK_CLASS</full_name>
        <value>""</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="47" package="Michelf\Markdown\Parser">
        <name>FN_BACKLINK_CLASS</name>
        <full_name>FN_BACKLINK_CLASS</full_name>
        <value>""</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="48" package="Michelf\Markdown\Parser">
        <name>CODE_CLASS_PREFIX</name>
        <full_name>CODE_CLASS_PREFIX</full_name>
        <value>""</value>
      </constant>
      <constant namespace="Michelf\Markdown\Parser" line="49" package="Michelf\Markdown\Parser">
        <name>CODE_ATTR_ON_PRE</name>
        <full_name>CODE_ATTR_ON_PRE</full_name>
        <value>false</value>
      </constant>
      <property final="false" static="false" visibility="public" line="54" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$fn_id_prefix</name>
        <default>""</default>
      </property>
      <property final="false" static="false" visibility="public" line="57" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$fn_link_title</name>
        <default>self::FN_LINK_TITLE</default>
      </property>
      <property final="false" static="false" visibility="public" line="58" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$fn_backlink_title</name>
        <default>self::FN_BACKLINK_TITLE</default>
      </property>
      <property final="false" static="false" visibility="public" line="61" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$fn_link_class</name>
        <default>self::FN_LINK_CLASS</default>
      </property>
      <property final="false" static="false" visibility="public" line="62" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$fn_backlink_class</name>
        <default>self::FN_BACKLINK_CLASS</default>
      </property>
      <property final="false" static="false" visibility="public" line="65" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$code_class_prefix</name>
        <default>self::CODE_CLASS_PREFIX</default>
      </property>
      <property final="false" static="false" visibility="public" line="68" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$code_attr_on_pre</name>
        <default>self::CODE_ATTR_ON_PRE</default>
      </property>
      <property final="false" static="false" visibility="public" line="71" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$predef_abbr</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="106" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$footnotes</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="107" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$footnotes_ordered</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="108" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$footnotes_ref_count</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="109" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$footnotes_numbers</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="110" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$abbr_desciptions</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="111" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$abbr_word_re</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="public" line="114" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$footnote_counter</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="public" line="157" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$id_class_attr_catch_re</name>
        <default>'\{((?:[ ]*[#.][-_:a-zA-Z0-9]+){1,})[ ]*\}'</default>
      </property>
      <property final="false" static="false" visibility="public" line="159" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$id_class_attr_nocatch_re</name>
        <default>'\{(?:[ ]*[#.][-_:a-zA-Z0-9]+){1,}[ ]*\}'</default>
      </property>
      <property final="false" static="false" visibility="public" line="201" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$block_tags_re</name>
        <default>'p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|address|form|fieldset|iframe|hr|legend|article|section|nav|aside|hgroup|header|footer|figcaption'</default>
      </property>
      <property final="false" static="false" visibility="public" line="204" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$context_block_tags_re</name>
        <default>'script|noscript|ins|del|iframe|object|source|track|param|math|svg|canvas|audio|video'</default>
      </property>
      <property final="false" static="false" visibility="public" line="207" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$contain_span_tags_re</name>
        <default>'p|h[1-6]|li|dd|dt|td|th|legend|address'</default>
      </property>
      <property final="false" static="false" visibility="public" line="211" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$clean_tags_re</name>
        <default>'script|math|svg'</default>
      </property>
      <property final="false" static="false" visibility="public" line="214" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$auto_close_tags_re</name>
        <default>'hr|img|param|source|track'</default>
      </property>
      <property final="false" static="false" visibility="public" line="1059" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$em_relist</name>
        <default>array('' =&gt; '(?:(?&lt;!\*)\*(?!\*)|(?&lt;![a-zA-Z0-9_])_(?!_))(?=\S|$)(?![\.,:;]\s)', '*' =&gt; '(?&lt;=\S|^)(?&lt;!\*)\*(?!\*)', '_' =&gt; '(?&lt;=\S|^)(?&lt;!_)_(?![a-zA-Z0-9_])')</default>
      </property>
      <property final="false" static="false" visibility="public" line="1064" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$strong_relist</name>
        <default>array('' =&gt; '(?:(?&lt;!\*)\*\*(?!\*)|(?&lt;![a-zA-Z0-9_])__(?!_))(?=\S|$)(?![\.,:;]\s)', '**' =&gt; '(?&lt;=\S|^)(?&lt;!\*)\*\*(?!\*)', '__' =&gt; '(?&lt;=\S|^)(?&lt;!_)__(?![a-zA-Z0-9_])')</default>
      </property>
      <property final="false" static="false" visibility="public" line="1069" namespace="Michelf\Markdown\Parser" package="Default">
        <name>$em_strong_relist</name>
        <default>array('' =&gt; '(?:(?&lt;!\*)\*\*\*(?!\*)|(?&lt;![a-zA-Z0-9_])___(?!_))(?=\S|$)(?![\.,:;]\s)', '***' =&gt; '(?&lt;=\S|^)(?&lt;!\*)\*\*\*(?!\*)', '___' =&gt; '(?&lt;=\S|^)(?&lt;!_)___(?![a-zA-Z0-9_])')</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="75" package="Michelf\Markdown\Parser">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="116" package="Michelf\Markdown\Parser">
        <name>setup</name>
        <full_name>setup</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="139" package="Michelf\Markdown\Parser">
        <name>teardown</name>
        <full_name>teardown</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="161" package="Michelf\Markdown\Parser">
        <name>doExtraAttributes</name>
        <full_name>doExtraAttributes</full_name>
        <argument line="161">
          <name>$tag_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="161">
          <name>$attr</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="216" package="Michelf\Markdown\Parser">
        <name>hashHTMLBlocks</name>
        <full_name>hashHTMLBlocks</full_name>
        <argument line="216">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="242" package="Michelf\Markdown\Parser">
        <name>_hashHTMLBlocks_inMarkdown</name>
        <full_name>_hashHTMLBlocks_inMarkdown</full_name>
        <argument line="242">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
        <argument line="242">
          <name>$indent</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="243">
          <name>$enclosing_tag_re</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="243">
          <name>$span</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="477" package="Michelf\Markdown\Parser">
        <name>_hashHTMLBlocks_inHTML</name>
        <full_name>_hashHTMLBlocks_inHTML</full_name>
        <argument line="477">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
        <argument line="477">
          <name>$hash_method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="477">
          <name>$md_attr</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="652" package="Michelf\Markdown\Parser">
        <name>hashClean</name>
        <full_name>hashClean</full_name>
        <argument line="652">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="664" package="Michelf\Markdown\Parser">
        <name>doHeaders</name>
        <full_name>doHeaders</full_name>
        <argument line="664">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="705" package="Michelf\Markdown\Parser">
        <name>_doHeaders_callback_setext</name>
        <full_name>_doHeaders_callback_setext</full_name>
        <argument line="705">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="716" package="Michelf\Markdown\Parser">
        <name>_doHeaders_callback_atx</name>
        <full_name>_doHeaders_callback_atx</full_name>
        <argument line="716">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="725" package="Michelf\Markdown\Parser">
        <name>doTables</name>
        <full_name>doTables</full_name>
        <argument line="725">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="787" package="Michelf\Markdown\Parser">
        <name>_doTable_leadingPipe_callback</name>
        <full_name>_doTable_leadingPipe_callback</full_name>
        <argument line="787">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="798" package="Michelf\Markdown\Parser">
        <name>_doTable_callback</name>
        <full_name>_doTable_callback</full_name>
        <argument line="798">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="857" package="Michelf\Markdown\Parser">
        <name>doDefLists</name>
        <full_name>doDefLists</full_name>
        <argument line="857">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="900" package="Michelf\Markdown\Parser">
        <name>_doDefLists_callback</name>
        <full_name>_doDefLists_callback</full_name>
        <argument line="900">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="913" package="Michelf\Markdown\Parser">
        <name>processDefListItems</name>
        <full_name>processDefListItems</full_name>
        <argument line="913">
          <name>$list_str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="957" package="Michelf\Markdown\Parser">
        <name>_processDefListItems_callback_dt</name>
        <full_name>_processDefListItems_callback_dt</full_name>
        <argument line="957">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="968" package="Michelf\Markdown\Parser">
        <name>_processDefListItems_callback_dd</name>
        <full_name>_processDefListItems_callback_dd</full_name>
        <argument line="968">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="987" package="Michelf\Markdown\Parser">
        <name>doFencedCodeBlocks</name>
        <full_name>doFencedCodeBlocks</full_name>
        <argument line="987">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1027" package="Michelf\Markdown\Parser">
        <name>_doFencedCodeBlocks_callback</name>
        <full_name>_doFencedCodeBlocks_callback</full_name>
        <argument line="1027">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1049" package="Michelf\Markdown\Parser">
        <name>_doFencedCodeBlocks_newlines</name>
        <full_name>_doFencedCodeBlocks_newlines</full_name>
        <argument line="1049">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1075" package="Michelf\Markdown\Parser">
        <name>formParagraphs</name>
        <full_name>formParagraphs</full_name>
        <argument line="1075">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1113" package="Michelf\Markdown\Parser">
        <name>stripFootnotes</name>
        <full_name>stripFootnotes</full_name>
        <argument line="1113">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1142" package="Michelf\Markdown\Parser">
        <name>_stripFootnotes_callback</name>
        <full_name>_stripFootnotes_callback</full_name>
        <argument line="1142">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1150" package="Michelf\Markdown\Parser">
        <name>doFootnotes</name>
        <full_name>doFootnotes</full_name>
        <argument line="1150">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1163" package="Michelf\Markdown\Parser">
        <name>appendFootnotes</name>
        <full_name>appendFootnotes</full_name>
        <argument line="1163">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1229" package="Michelf\Markdown\Parser">
        <name>_appendFootnotes_callback</name>
        <full_name>_appendFootnotes_callback</full_name>
        <argument line="1229">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1275" package="Michelf\Markdown\Parser">
        <name>stripAbbreviations</name>
        <full_name>stripAbbreviations</full_name>
        <argument line="1275">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1292" package="Michelf\Markdown\Parser">
        <name>_stripAbbreviations_callback</name>
        <full_name>_stripAbbreviations_callback</full_name>
        <argument line="1292">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1305" package="Michelf\Markdown\Parser">
        <name>doAbbreviations</name>
        <full_name>doAbbreviations</full_name>
        <argument line="1305">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Michelf\Markdown\Parser" line="1323" package="Michelf\Markdown\Parser">
        <name>_doAbbreviations_callback</name>
        <full_name>_doAbbreviations_callback</full_name>
        <argument line="1323">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="54" code="50018">No DocBlock was found for property $fn_id_prefix</error>
      <error line="57" code="50018">No DocBlock was found for property $fn_link_title</error>
      <error line="58" code="50018">No DocBlock was found for property $fn_backlink_title</error>
      <error line="61" code="50018">No DocBlock was found for property $fn_link_class</error>
      <error line="62" code="50018">No DocBlock was found for property $fn_backlink_class</error>
      <error line="65" code="50018">No DocBlock was found for property $code_class_prefix</error>
      <error line="68" code="50018">No DocBlock was found for property $code_attr_on_pre</error>
      <error line="71" code="50018">No DocBlock was found for property $predef_abbr</error>
      <error line="106" code="50018">No DocBlock was found for property $footnotes</error>
      <error line="107" code="50018">No DocBlock was found for property $footnotes_ordered</error>
      <error line="108" code="50018">No DocBlock was found for property $footnotes_ref_count</error>
      <error line="109" code="50018">No DocBlock was found for property $footnotes_numbers</error>
      <error line="110" code="50018">No DocBlock was found for property $abbr_desciptions</error>
      <error line="111" code="50018">No DocBlock was found for property $abbr_word_re</error>
      <error line="114" code="50018">No DocBlock was found for property $footnote_counter</error>
      <error line="157" code="50018">No DocBlock was found for property $id_class_attr_catch_re</error>
      <error line="159" code="50018">No DocBlock was found for property $id_class_attr_nocatch_re</error>
      <error line="201" code="50018">No DocBlock was found for property $block_tags_re</error>
      <error line="204" code="50018">No DocBlock was found for property $context_block_tags_re</error>
      <error line="207" code="50018">No DocBlock was found for property $contain_span_tags_re</error>
      <error line="211" code="50018">No DocBlock was found for property $clean_tags_re</error>
      <error line="214" code="50018">No DocBlock was found for property $auto_close_tags_re</error>
      <error line="1059" code="50018">No DocBlock was found for property $em_relist</error>
      <error line="1064" code="50018">No DocBlock was found for property $strong_relist</error>
      <error line="1069" code="50018">No DocBlock was found for property $em_strong_relist</error>
      <error line="75" code="50010">No DocBlock was found for method __construct()</error>
      <error line="116" code="50010">No DocBlock was found for method setup()</error>
      <error line="139" code="50010">No DocBlock was found for method teardown()</error>
      <error line="161" code="50010">No DocBlock was found for method doExtraAttributes()</error>
      <error line="216" code="50010">No DocBlock was found for method hashHTMLBlocks()</error>
      <error line="242" code="50010">No DocBlock was found for method _hashHTMLBlocks_inMarkdown()</error>
      <error line="477" code="50010">No DocBlock was found for method _hashHTMLBlocks_inHTML()</error>
      <error line="652" code="50010">No DocBlock was found for method hashClean()</error>
      <error line="664" code="50010">No DocBlock was found for method doHeaders()</error>
      <error line="705" code="50010">No DocBlock was found for method _doHeaders_callback_setext()</error>
      <error line="716" code="50010">No DocBlock was found for method _doHeaders_callback_atx()</error>
      <error line="725" code="50010">No DocBlock was found for method doTables()</error>
      <error line="787" code="50010">No DocBlock was found for method _doTable_leadingPipe_callback()</error>
      <error line="798" code="50010">No DocBlock was found for method _doTable_callback()</error>
      <error line="857" code="50010">No DocBlock was found for method doDefLists()</error>
      <error line="900" code="50010">No DocBlock was found for method _doDefLists_callback()</error>
      <error line="913" code="50010">No DocBlock was found for method processDefListItems()</error>
      <error line="957" code="50010">No DocBlock was found for method _processDefListItems_callback_dt()</error>
      <error line="968" code="50010">No DocBlock was found for method _processDefListItems_callback_dd()</error>
      <error line="987" code="50010">No DocBlock was found for method doFencedCodeBlocks()</error>
      <error line="1027" code="50010">No DocBlock was found for method _doFencedCodeBlocks_callback()</error>
      <error line="1049" code="50010">No DocBlock was found for method _doFencedCodeBlocks_newlines()</error>
      <error line="1075" code="50010">No DocBlock was found for method formParagraphs()</error>
      <error line="1113" code="50010">No DocBlock was found for method stripFootnotes()</error>
      <error line="1142" code="50010">No DocBlock was found for method _stripFootnotes_callback()</error>
      <error line="1150" code="50010">No DocBlock was found for method doFootnotes()</error>
      <error line="1163" code="50010">No DocBlock was found for method appendFootnotes()</error>
      <error line="1229" code="50010">No DocBlock was found for method _appendFootnotes_callback()</error>
      <error line="1275" code="50010">No DocBlock was found for method stripAbbreviations()</error>
      <error line="1292" code="50010">No DocBlock was found for method _stripAbbreviations_callback()</error>
      <error line="1305" code="50010">No DocBlock was found for method doAbbreviations()</error>
      <error line="1323" code="50010">No DocBlock was found for method _doAbbreviations_callback()</error>
    </parse_markers>
    <source></source>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="Michelf" full_name="Michelf">
    <package name="Markdown" full_name="Michelf\Markdown">
      <package name="Parser" full_name="Michelf\Markdown\Parser"/>
    </package>
  </package>
  <package name="WebsafeTest" full_name="WebsafeTest">
    <package name="Filter" full_name="WebsafeTest\Filter">
      <package name="Markdown" full_name="WebsafeTest\Filter\Markdown"/>
    </package>
  </package>
  <namespace name="MichelfTest" full_name="MichelfTest">
    <namespace name="Markdown" full_name="MichelfTest\Markdown">
      <namespace name="Parser" full_name="MichelfTest\Markdown\Parser"/>
    </namespace>
  </namespace>
  <namespace name="Michelf" full_name="Michelf">
    <namespace name="Markdown" full_name="Michelf\Markdown">
      <namespace name="Parser" full_name="Michelf\Markdown\Parser"/>
    </namespace>
  </namespace>
  <marker count="4">todo</marker>
  <marker count="4">fixme</marker>
  <deprecated count="0"/>
</project>
